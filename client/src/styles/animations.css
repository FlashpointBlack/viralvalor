/*
 * Animation System - Centralized Animation Styles
 * Provides consistent animation patterns across the application
 */

/* Fade animations */
@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLeft {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fadeInRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Scale animations */
@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: scale(1);
  }
  to {
    opacity: 0;
    transform: scale(0.8);
  }
}

/* Rotate animations */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 rgba(var(--primary-rgb), 0.7); }
  70% { box-shadow: 0 0 0 10px rgba(var(--primary-rgb), 0); }
  100% { box-shadow: 0 0 0 0 rgba(var(--primary-rgb), 0); }
}

/* Shake animation */
@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

/* Bounce animation */
@keyframes bounce {
  0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
  40% { transform: translateY(-20px); }
  60% { transform: translateY(-10px); }
}

/* Loading animations */
@keyframes loadingDots {
  0%, 80%, 100% { opacity: 0; }
  40% { opacity: 1; }
}

@keyframes loadingBar {
  from { width: 0; }
  to { width: 100%; }
}

/* Progress animation */
@keyframes progressLinear {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes progressCircular {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

/* Utility classes for animations */
.animate-fade-in {
  animation: fadeIn var(--transition-base) var(--transition-timing-default) forwards;
}

.animate-fade-out {
  animation: fadeOut var(--transition-base) var(--transition-timing-default) forwards;
}

.animate-fade-in-up {
  animation: fadeInUp var(--transition-base) var(--transition-timing-default) forwards;
}

.animate-fade-in-down {
  animation: fadeInDown var(--transition-base) var(--transition-timing-default) forwards;
}

.animate-scale-in {
  animation: scaleIn var(--transition-base) var(--transition-timing-default) forwards;
}

.animate-scale-out {
  animation: scaleOut var(--transition-base) var(--transition-timing-default) forwards;
}

.animate-spin {
  animation: spin 1s linear infinite;
}

.animate-pulse {
  animation: pulse 2s infinite;
}

.animate-shake {
  animation: shake 0.5s var(--transition-timing-bounce);
}

.animate-bounce {
  animation: bounce 1s var(--transition-timing-bounce);
}

/* Animation durations */
.duration-75 {
  animation-duration: 75ms;
}

.duration-100 {
  animation-duration: 100ms;
}

.duration-150 {
  animation-duration: 150ms;
}

.duration-200 {
  animation-duration: 200ms;
}

.duration-300 {
  animation-duration: 300ms;
}

.duration-500 {
  animation-duration: 500ms;
}

.duration-700 {
  animation-duration: 700ms;
}

.duration-1000 {
  animation-duration: 1000ms;
}

/* Animation delays */
.delay-0 {
  animation-delay: 0ms;
}

.delay-75 {
  animation-delay: 75ms;
}

.delay-100 {
  animation-delay: 100ms;
}

.delay-150 {
  animation-delay: 150ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}

.delay-500 {
  animation-delay: 500ms;
}

.delay-700 {
  animation-delay: 700ms;
}

.delay-1000 {
  animation-delay: 1000ms;
}

/* Animation timing functions */
.ease-linear {
  animation-timing-function: linear;
}

.ease-in {
  animation-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-out {
  animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.ease-in-out {
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-bounce {
  animation-timing-function: var(--transition-timing-bounce);
}

/* Animation fill modes */
.fill-none {
  animation-fill-mode: none;
}

.fill-forwards {
  animation-fill-mode: forwards;
}

.fill-backwards {
  animation-fill-mode: backwards;
}

.fill-both {
  animation-fill-mode: both;
}

/* Animation iterations */
.iterate-infinite {
  animation-iteration-count: infinite;
}

.iterate-once {
  animation-iteration-count: 1;
}

.iterate-twice {
  animation-iteration-count: 2;
}

/* Animation play state */
.paused {
  animation-play-state: paused;
}

.running {
  animation-play-state: running;
}

/* Animation direction */
.direction-normal {
  animation-direction: normal;
}

.direction-reverse {
  animation-direction: reverse;
}

.direction-alternate {
  animation-direction: alternate;
}

.direction-alternate-reverse {
  animation-direction: alternate-reverse;
}

/* Transition utilities */
.transition-all {
  transition-property: all;
  transition-duration: var(--transition-base);
  transition-timing-function: var(--transition-timing-default);
}

.transition-transform {
  transition-property: transform;
  transition-duration: var(--transition-base);
  transition-timing-function: var(--transition-timing-default);
}

.transition-opacity {
  transition-property: opacity;
  transition-duration: var(--transition-base);
  transition-timing-function: var(--transition-timing-default);
}

.transition-colors {
  transition-property: background-color, border-color, color, fill, stroke;
  transition-duration: var(--transition-base);
  transition-timing-function: var(--transition-timing-default);
}

/* Loading spinner component */
.loading-spinner {
  display: inline-block;
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  border: 2px solid var(--bg-alt);
  border-top-color: var(--primary);
  animation: spin 0.75s linear infinite;
}

.loading-spinner-sm {
  width: 1rem;
  height: 1rem;
  border-width: 1px;
}

.loading-spinner-lg {
  width: 3rem;
  height: 3rem;
  border-width: 3px;
}

/* Loading dots */
.loading-dots {
  display: inline-flex;
  align-items: center;
}

.loading-dots::after {
  content: "";
  width: 0.25rem;
  height: 0.25rem;
  margin-left: 0.25rem;
  background-color: currentColor;
  border-radius: 50%;
  animation: loadingDots 1.4s infinite both;
}

.loading-dots::before {
  content: "";
  width: 0.25rem;
  height: 0.25rem;
  margin-right: 0.25rem;
  background-color: currentColor;
  border-radius: 50%;
  animation: loadingDots 1.4s 0.2s infinite both;
}

/* Progress bar */
.progress-bar {
  height: 0.25rem;
  background-color: var(--bg-alt);
  border-radius: var(--radius-full);
  overflow: hidden;
}

.progress-bar-fill {
  height: 100%;
  background-color: var(--primary);
  border-radius: var(--radius-full);
  transition: width 0.3s ease;
}

.progress-bar-indeterminate .progress-bar-fill {
  width: 50%;
  animation: progressLinear 1.5s infinite ease-in-out;
  animation-direction: alternate;
}

/* Preference: reduce motion */
@media (prefers-reduced-motion) {
  *, ::before, ::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* Common animations for specific components */
.modal-enter {
  animation: scaleIn var(--transition-base) var(--transition-timing-default) forwards;
}

.modal-exit {
  animation: scaleOut var(--transition-base) var(--transition-timing-default) forwards;
}

.tooltip-enter {
  animation: fadeInUp var(--transition-fast) var(--transition-timing-default) forwards;
}

.tooltip-exit {
  animation: fadeOut var(--transition-fast) var(--transition-timing-default) forwards;
}

.dropdown-enter {
  animation: fadeInDown var(--transition-fast) var(--transition-timing-default) forwards;
}

.dropdown-exit {
  animation: fadeOut var(--transition-fast) var(--transition-timing-default) forwards;
}

.toast-enter {
  animation: fadeInRight var(--transition-base) var(--transition-timing-default) forwards;
}

.toast-exit {
  animation: fadeOutRight var(--transition-base) var(--transition-timing-default) forwards;
}

@keyframes fadeOutRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(20px);
  }
}

/* Inline loading */
.inline-loading {
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;
  color: var(--text-secondary, #555);
  font-size: 0.875rem;
}

/* Story view fade animation - From client/src/components/StoryView.css (lines 154-157) */
@keyframes storyFadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
} 